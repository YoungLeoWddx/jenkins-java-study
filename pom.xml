<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.liuyang.jenkins.study</groupId>
  <artifactId>jenkins-java</artifactId>
  <version>003-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>jenkins-java</name>
  <url>http://maven.apache.org</url>

  <properties>
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
 
 <build>
 	<plugins>
 		<!-- 这是一个官方的插件，输出源码的插件 -->
	      <plugin>
	      	<groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-source-plugin</artifactId>
	        <version>3.0.0</version>
	        <!-- 执行插件的一些设置 -->
	        <executions>
	        	<execution>
	        		<!-- 执行的任务的id，起名为attach-source -->
	        		<id>attach-source</id>
	        		<!-- 在生命周期的那个阶段执行，这里设置在package阶段执行 -->
	        		<phase>package</phase>
	        		<!-- 配置执行插件的目标（一个插件内部有很多个执行目标） -->
	        		<goals>
	        			<goal>jar-no-fork</goal>
	        		</goals>
	        	</execution>
	        </executions>
	      </plugin>
	      
	      
	   <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.3</version>
        <executions>
          <execution>
            <id>default-site</id>
            <phase>site</phase>
            <goals>
              <goal>site</goal>
            </goals>
            <configuration>
              <outputDirectory>target/site</outputDirectory>
              <reportPlugins>
                <reportPlugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-project-info-reports-plugin</artifactId>
                </reportPlugin>
              </reportPlugins>
            </configuration>
          </execution>
          <execution>
            <id>default-deploy</id>
            <phase>site-deploy</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
            <configuration>
              <outputDirectory>target/site</outputDirectory>
              <reportPlugins>
                <reportPlugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-project-info-reports-plugin</artifactId>
                </reportPlugin>
              </reportPlugins>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <outputDirectory>target/site</outputDirectory>
          <reportPlugins>
            <reportPlugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
            </reportPlugin>
            <!-- 直接执行mvn site就可以生成checkstyle的报告了，集成在site项目页面中了-->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-checkstyle-plugin</artifactId>
              <version>2.17</version>
              <configuration>
              	<configLocation>src/main/resources/checkstyle-template.xml</configLocation>
              </configuration>
            </plugin>
            <!-- 直接执行mvn site就可以生成javadoc了，集成在site项目页面中了 -->
            <plugin>  
                <groupId>org.apache.maven.plugins</groupId>  
                <artifactId>maven-javadoc-plugin</artifactId>  
                <version>3.0.0-M1</version>
             </plugin> 
             <plugin>  
                <groupId>org.codehaus.mojo</groupId>
			    <artifactId>cobertura-maven-plugin</artifactId>
			    <version>2.7</version>
                <configuration>
                	<formats>
                		<format>html</format>
                		<format>xml</format>
                	</formats>
                </configuration>
             </plugin> 
             <plugin>
             <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-pmd-plugin</artifactId>
             <version>3.8</version>
             <configuration>
             	<rulesets>
             		<ruleset>src/main/resources/rulesets/java/my-ruleset.xml</ruleset>
             	</rulesets>
             	<!-- CPD的配置，检查重复代码，最少20行 -->
             	<minimumTokens>20</minimumTokens>
             	<ignoreIdentifiers>true</ignoreIdentifiers>
             </configuration>
	        </plugin> 
	        <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.4</version>
                <configuration>
                	<effort>Max</effort>
                	<findbugsXmlOutput>true</findbugsXmlOutput>
                	<xmlOutput>true</xmlOutput>
                </configuration>
            </plugin>
          </reportPlugins>
        </configuration>
      </plugin>
      
      
 	</plugins>
 </build>
 
 	<scm>
		<!--SCM的URL,该URL描述了版本库和如何连接到版本库。这个url就是该项目的git仓库地址，欲知详情，请看SCMs提供的URL格式和列表。该连接只读。-->     
		<url>scm:git:https://github.com/YoungLeoWddx/jenkins-java-study</url>
		<!--给开发者使用的，类似connection元素。即该连接不仅仅只读-->    
        <developerConnection>scm:git:https://github.com/YoungLeoWddx/jenkins-java-study</developerConnection> 
	  <tag>HEAD</tag>
  </scm>
</project>
